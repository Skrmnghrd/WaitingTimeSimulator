class db_functions(__add__customer__, __add__cashier__, __get_customers__):

  def __init__(self, vars):
    """
    Initialize the vars and then re-initite the superclasses
    #is this the right way to do it? it's my first time ;> but hey, big break!
    """
    __add__customer__.__init__(self)
    __add__cashier__.__init__(self)
    __get_customers__.__init__(self)
  def add_customer(self):
    """
    gets the parameters and adds customer to database
    """
    #__add__customer__
    pass
  def add_cashier(self):
    """
    adds_cashier to the database
    """
    pass
  def get_customers(self):
    """
    gets the customer $select * from cust order by entry time
    """
    pass
  def 
  
  
"""

class Hello():
  def __init__(self, var1):
    self.var1 = var1
  def funcfromhello(self):
    print(self.var1)
class Test(Hello):
  def __init__(self, var1):
    #found a solution
    Hello.__init__(self, var1)
    """
    def __init__(self,num):
        #call the superclass again to init it
        Num.__init__(self,num)
        self.n2 = num*2
    """
    pass
"""
